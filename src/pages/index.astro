---
import Hero from '../components/Hero.astro';
import MobilePostList from '../components/MobilePostList.astro';
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import PageWrapper from '../layouts/PageWrapper.astro';
import DesktopEditorsChoice from '../components/DesktopEditorsChoice.astro';
import DesktopPostList from '../components/DesktopPostList';
import PageUpArrow from '../components/PageUpArrow.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';

const rawPosts = (await getCollection('blog')).sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

const allPosts = rawPosts.map((post) => {
  const pubDate = new Date(post.data.pubDate);

  return {
    id: post.id,
    slug: post.data.slug,
    data: {
      title: post.data.title,
      titleAppend: post.data.titleAppend ?? null,
      editorsChoice: post.data.editorsChoice ?? false,
      hero: post.data.hero ?? false,
      slug: post.data.slug,
      createdAt: new Date(post.data.pubDate).toLocaleDateString(),
      image: {
        url: post.data.image.url,
        alt: post.data.image.alt,
      },
      category: post.data.category,
      categoryLink: post.data.categoryLink,
    },
  };
});
---

<Layout>
  <BaseHead slot="basehead" title={SITE_TITLE} description={SITE_DESCRIPTION} />
  <Fragment slot="body">
    <Header />
    <PageUpArrow />
    <PageWrapper>
      <!-- <Hero /> 
      <MobilePostList />
      <DesktopEditorsChoice />-->
      <DesktopPostList client:load allPosts={allPosts} />
    </PageWrapper>
  </Fragment>
  <Footer slot="footer" />
</Layout>
