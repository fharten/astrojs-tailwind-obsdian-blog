---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PageWrapper from '../../layouts/PageWrapper.astro';
import Header from '../../components/Header.astro';
import MobilePostSingle from '../../components/MobilePostSingle.astro';
import Footer from '../../components/Footer.astro';
import type { BlogPost } from '../../types/BlogPost';
import DesktopPostSingle from '../../components/DesktopPostSingle.astro';

export function getStaticPaths() {
  return [
    { params: { category: 'os' } },
    { params: { category: 'phone' } },
    { params: { category: 'cloud' } },
    { params: { category: 'selfhost' } },
    { params: { category: 'opensource' } },
    { params: { category: 'privacy' } },
    { params: { category: 'email' } },
    { params: { category: 'bigtech' } },
  ];
}

const { category } = Astro.params;

const posts = (await getCollection('blog'))
  .filter((post) => post.data.categoryLink === category)
  .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

// const posts = await getCollection('blog', ({ data }) => {
//   return data.categoryLink === category;
// });
---

<Layout>
  <Fragment slot="body">
    <Header />
    <PageWrapper>
      <div class="w-full pt-28 md:hidden">
        {
          posts.map((post: BlogPost) => (
            <div>
              <div slot="head">
                <title>{post.data.category} | OTG</title>
              </div>
              <MobilePostSingle
                title={post.data.title}
                titleAppend={post.data.titleAppend}
                slug={post.data.slug}
                image={post.data.image}
                category={post.data.category}
                categoryLink={post.data.categoryLink}
                createdAt={post.data.pubDate}
              />
            </div>
          ))
        }
      </div>
      <div
        class="hidden w-full pt-28 md:grid md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 md:gap-5"
      >
        {
          posts.map((post: BlogPost) => (
            <div>
              <div slot="head">
                <title>{post.data.category} | OTG</title>
              </div>
              <DesktopPostSingle
                title={post.data.title}
                titleAppend={post.data.titleAppend}
                author={post.data.author}
                slug={post.data.slug}
                image={post.data.image}
                category={post.data.category}
                categoryLink={post.data.categoryLink}
                createdAt={post.data.pubDate}
              />
            </div>
          ))
        }
      </div>
    </PageWrapper>
  </Fragment>
  <Fragment slot="footer">
    <Footer />
  </Fragment>
</Layout>
